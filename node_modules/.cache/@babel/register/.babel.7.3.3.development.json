{
  "{\"sourceRoot\":\"/Users/djaydnova/Documents/IMAC - folder/IMAC-javascript/tds-imac2-js/test\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/djaydnova/Documents/IMAC - folder/IMAC-javascript/tds-imac2-js\",\"filename\":\"/Users/djaydnova/Documents/IMAC - folder/IMAC-javascript/tds-imac2-js/test/td02.test.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/djaydnova/Documents/IMAC - folder/IMAC-javascript/tds-imac2-js\",\"plugins\":[{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/djaydnova/Documents/IMAC - folder/IMAC-javascript/tds-imac2-js/test",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/djaydnova/Documents/IMAC - folder/IMAC-javascript/tds-imac2-js",
      "filename": "/Users/djaydnova/Documents/IMAC - folder/IMAC-javascript/tds-imac2-js/test/td02.test.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/djaydnova/Documents/IMAC - folder/IMAC-javascript/tds-imac2-js",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/djaydnova/Documents/IMAC - folder/IMAC-javascript/tds-imac2-js/test/td02.test.js",
        "plugins": [
          "objectRestSpread",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/djaydnova/Documents/IMAC - folder/IMAC-javascript/tds-imac2-js/test/td02.test.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/djaydnova/Documents/IMAC - folder/IMAC-javascript/tds-imac2-js/test",
        "sourceFileName": "td02.test.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _td = require(\"../src/td02/td02\");\n\nvar _state = _interopRequireDefault(require(\"../src/td02/state\"));\n\nvar _chai = _interopRequireDefault(require(\"chai\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n_chai.default.expect();\n\nvar expect = _chai.default.expect;\nvar test = it;\ntest('exercice 1', function () {\n  expect((0, _td.every)(function (x) {\n    return x > 0 && x < 5;\n  }, [1, 2, 3, 4])).to.eq(true);\n});\ntest('createTag', function () {\n  expect(_td.createTag).to.be.a('function');\n  expect((0, _td.createTag)('div', {\n    class: 'header'\n  }, [])).to.deep.eq({\n    name: 'div',\n    attributes: {\n      class: 'header'\n    },\n    children: []\n  });\n});\ntest('exercice 2.1 : img', function () {\n  expect(_td.img).to.be.a('function');\n  expect((0, _td.img)({\n    src: 'http://example.com/img.jpg'\n  })).to.deep.eq({\n    name: 'img',\n    attributes: {\n      src: 'http://example.com/img.jpg'\n    },\n    children: []\n  });\n});\ntest('exercice 2.1 : figure', function () {\n  expect(_td.figure).to.be.a('function');\n  expect((0, _td.figure)(null, [])).to.deep.eq({\n    name: 'figure',\n    attributes: null,\n    children: []\n  });\n});\ntest('exercice 2.1 : figcaption', function () {\n  expect(_td.figcaption).to.be.a('function');\n  expect((0, _td.figcaption)(null, [])).to.deep.eq({\n    name: 'figcaption',\n    attributes: null,\n    children: []\n  });\n});\ntest('exercice 2.1 : p', function () {\n  expect(_td.p).to.be.a('function');\n  expect((0, _td.p)(null, ['value'])).to.deep.eq({\n    name: 'p',\n    attributes: null,\n    children: ['value']\n  });\n});\ntest('exercice 2.2', function () {\n  var dogMarkup = (0, _td.generateMarkupForDog)('url', 'doggo', 'pretty puppy');\n  expect(dogMarkup.name).to.eq('figure');\n  expect(dogMarkup.children[0].name).to.eq('img');\n  expect(dogMarkup.children[0].attributes.src).to.eq('url');\n  expect(dogMarkup.children[1].name).to.eq('figcaption');\n  expect(dogMarkup.children[1].children[0].name).to.eq('p');\n  expect(dogMarkup.children[1].children[0].children).to.deep.eq(['doggo']);\n  expect(dogMarkup.children[1].children[1].name).to.eq('p');\n  expect(dogMarkup.children[1].children[1].children).to.deep.eq(['pretty puppy']);\n});\ntest('exercice 2.3', function () {\n  var dogsMarkup = (0, _td.generateMarkupForAllDogs)(_state.default.dogs);\n  expect(dogsMarkup.name).to.eq('div');\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRkMDIudGVzdC5qcyJdLCJuYW1lcyI6WyJjaGFpIiwiZXhwZWN0IiwidGVzdCIsIml0IiwieCIsInRvIiwiZXEiLCJjcmVhdGVUYWciLCJiZSIsImEiLCJjbGFzcyIsImRlZXAiLCJuYW1lIiwiYXR0cmlidXRlcyIsImNoaWxkcmVuIiwiaW1nIiwic3JjIiwiZmlndXJlIiwiZmlnY2FwdGlvbiIsInAiLCJkb2dNYXJrdXAiLCJkb2dzTWFya3VwIiwic3RhdGUiLCJkb2dzIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQVdBOztBQUVBOzs7O0FBQ0FBLGNBQUtDLE1BQUw7O0FBQ0EsSUFBTUEsTUFBTSxHQUFHRCxjQUFLQyxNQUFwQjtBQUVBLElBQU1DLElBQUksR0FBR0MsRUFBYjtBQUVBRCxJQUFJLENBQUMsWUFBRCxFQUFlLFlBQU07QUFDdkJELEVBQUFBLE1BQU0sQ0FBQyxlQUFNLFVBQUFHLENBQUM7QUFBQSxXQUFJQSxDQUFDLEdBQUcsQ0FBSixJQUFTQSxDQUFDLEdBQUcsQ0FBakI7QUFBQSxHQUFQLEVBQTJCLENBQUMsQ0FBRCxFQUFJLENBQUosRUFBTyxDQUFQLEVBQVUsQ0FBVixDQUEzQixDQUFELENBQU4sQ0FBaURDLEVBQWpELENBQW9EQyxFQUFwRCxDQUF1RCxJQUF2RDtBQUNELENBRkcsQ0FBSjtBQUlBSixJQUFJLENBQUMsV0FBRCxFQUFjLFlBQU07QUFDdEJELEVBQUFBLE1BQU0sQ0FBQ00sYUFBRCxDQUFOLENBQWtCRixFQUFsQixDQUFxQkcsRUFBckIsQ0FBd0JDLENBQXhCLENBQTBCLFVBQTFCO0FBQ0FSLEVBQUFBLE1BQU0sQ0FDSixtQkFBVSxLQUFWLEVBQWlCO0FBQUNTLElBQUFBLEtBQUssRUFBRTtBQUFSLEdBQWpCLEVBQW9DLEVBQXBDLENBREksQ0FBTixDQUVFTCxFQUZGLENBRUtNLElBRkwsQ0FFVUwsRUFGVixDQUVhO0FBQ1hNLElBQUFBLElBQUksRUFBRSxLQURLO0FBRVhDLElBQUFBLFVBQVUsRUFBRTtBQUFDSCxNQUFB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QUNELENBSEcsQ0FBSiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvZGpheWRub3ZhL0RvY3VtZW50cy9JTUFDIC0gZm9sZGVyL0lNQUMtamF2YXNjcmlwdC90ZHMtaW1hYzItanMvdGVzdCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIGV2ZXJ5LFxuICBjcmVhdGVUYWcsXG4gIGltZyxcbiAgZmlndXJlLFxuICBmaWdjYXB0aW9uLFxuICBwLFxuICBnZW5lcmF0ZU1hcmt1cEZvckRvZyxcbiAgZ2VuZXJhdGVNYXJrdXBGb3JBbGxEb2dzXG59IGZyb20gJy4uL3NyYy90ZDAyL3RkMDInXG5cbmltcG9ydCBzdGF0ZSBmcm9tICcuLi9zcmMvdGQwMi9zdGF0ZSdcblxuaW1wb3J0IGNoYWkgZnJvbSAnY2hhaSdcbmNoYWkuZXhwZWN0KClcbmNvbnN0IGV4cGVjdCA9IGNoYWkuZXhwZWN0XG5cbmNvbnN0IHRlc3QgPSBpdFxuXG50ZXN0KCdleGVyY2ljZSAxJywgKCkgPT4ge1xuICBleHBlY3QoZXZlcnkoeCA9PiB4ID4gMCAmJiB4IDwgNSwgWzEsIDIsIDMsIDRdKSkudG8uZXEodHJ1ZSlcbn0pXG5cbnRlc3QoJ2NyZWF0ZVRhZycsICgpID0+IHtcbiAgZXhwZWN0KGNyZWF0ZVRhZykudG8uYmUuYSgnZnVuY3Rpb24nKVxuICBleHBlY3QoXG4gICAgY3JlYXRlVGFnKCdkaXYnLCB7Y2xhc3M6ICdoZWFkZXInfSwgW10pXG4gICkudG8uZGVlcC5lcSh7XG4gICAgbmFtZTogJ2RpdicsXG4gICAgYXR0cmlidXRlczoge2NsYXNzOiAnaGVhZGVyJ30sXG4gICAgY2hpbGRyZW46IFtdXG4gIH0pXG59KVxuXG50ZXN0KCdleGVyY2ljZSAyLjEgOiBpbWcnLCAoKSA9PiB7XG4gIGV4cGVjdChpbWcpLnRvLmJlLmEoJ2Z1bmN0aW9uJylcbiAgZXhwZWN0KGltZyh7c3JjOiAnaHR0cDovL2V4YW1wbGUuY29tL2ltZy5qcGcnfSkpLnRvLmRlZXAuZXEoe1xuICAgIG5hbWU6ICdpbWcnLFxuICAgIGF0dHJpYnV0ZXM6IHtzcmM6ICdodHRwOi8vZXhhbXBsZS5jb20vaW1nLmpwZyd9LFxuICAgIGNoaWxkcmVuOiBbXVxuICB9KVxufSlcbnRlc3QoJ2V4ZXJjaWNlIDIuMSA6IGZpZ3VyZScsICgpID0+IHtcbiAgZXhwZWN0KGZpZ3VyZSkudG8uYmUuYSgnZnVuY3Rpb24nKVxuICBleHBlY3QoZmlndXJlKG51bGwsIFtdKSkudG8uZGVlcC5lcSh7XG4gICAgbmFtZTogJ2ZpZ3VyZScsXG4gICAgYXR0cmlidXRlczogbnVsbCxcbiAgICBjaGlsZHJlbjogW11cbiAgfSlcbn0pXG5cbnRlc3QoJ2V4ZXJjaWNlIDIuMSA6IGZpZ2NhcHRpb24nLCAoKSA9PiB7XG4gIGV4cGVjdChmaWdjYXB0aW9uKS50by5iZS5hKCdmdW5jdGlvbicpXG4gIGV4cGVjdChmaWdjYXB0aW9uKG51bGwsIFtdKSkudG8uZGVlcC5lcSh7XG4gICAgbmFtZTogJ2ZpZ2NhcHRpb24nLFxuICAgIGF0dHJpYnV0ZXM6IG51bGwsXG4gICAgY2hpbGRyZW46IFtdXG4gIH0pXG59KVxuXG50ZXN0KCdleGVyY2ljZSAyLjEgOiBwJywgKCkgPT4ge1xuICBleHBlY3QocCkudG8uYmUuYSgnZnVuY3Rpb24nKVxuICBleHBlY3QocChudWxsLCBbJ3ZhbHVlJ10pKS50by5kZWVwLmVxKHtcbiAgICBuYW1lOiAncCcsXG4gICAgYXR0cmlidXRlczogbnVsbCxcbiAgICBjaGlsZHJlbjogWyd2YWx1ZSddXG4gIH0pXG59KVxuXG50ZXN0KCdleGVyY2ljZSAyLjInLCAoKSA9PiB7XG4gIGNvbnN0IGRvZ01hcmt1cCA9IGdlbmVyYXRlTWFya3VwRm9yRG9nKCd1cmwnLCAnZG9nZ28nLCAncHJldHR5IHB1cHB5JylcbiAgZXhwZWN0KGRvZ01hcmt1cC5uYW1lKS50by5lcSgnZmlndXJlJylcbiAgZXhwZWN0KGRvZ01hcmt1cC5jaGlsZHJlblswXS5uYW1lKS50by5lcSgnaW1nJylcbiAgZXhwZWN0KGRvZ01hcmt1cC5jaGlsZHJlblswXS5hdHRyaWJ1dGVzLnNyYykudG8uZXEoJ3VybCcpXG4gIGV4cGVjdChkb2dNYXJrdXAuY2hpbGRyZW5bMV0ubmFtZSkudG8uZXEoJ2ZpZ2NhcHRpb24nKVxuICBleHBlY3QoZG9nTWFya3VwLmNoaWxkcmVuWzFdLmNoaWxkcmVuWzBdLm5hbWUpLnRvLmVxKCdwJylcbiAgZXhwZWN0KGRvZ01hcmt1cC5jaGlsZHJlblsxXS5jaGlsZHJlblswXS5jaGlsZHJlbikudG8uZGVlcC5lcShbJ2RvZ2dvJ10pXG4gIGV4cGVjdChkb2dNYXJrdXAuY2hpbGRyZW5bMV0uY2hpbGRyZW5bMV0ubmFtZSkudG8uZXEoJ3AnKVxuICBleHBlY3QoZG9nTWFya3VwLmNoaWxkcmVuWzFdLmNoaWxkcmVuWzFdLmNoaWxkcmVuKS50by5kZWVwLmVxKFsncHJldHR5IHB1cHB5J10pXG59KVxuXG50ZXN0KCdleGVyY2ljZSAyLjMnLCAoKSA9PiB7XG4gIGNvbnN0IGRvZ3NNYXJrdXAgPSBnZW5lcmF0ZU1hcmt1cEZvckFsbERvZ3Moc3RhdGUuZG9ncylcbiAgZXhwZWN0KGRvZ3NNYXJrdXAubmFtZSkudG8uZXEoJ2RpdicpXG59KVxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "td02.test.js"
      ],
      "names": [
        "chai",
        "expect",
        "test",
        "it",
        "x",
        "to",
        "eq",
        "createTag",
        "be",
        "a",
        "class",
        "deep",
        "name",
        "attributes",
        "children",
        "img",
        "src",
        "figure",
        "figcaption",
        "p",
        "dogMarkup",
        "dogsMarkup",
        "state",
        "dogs"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/djaydnova/Documents/IMAC - folder/IMAC-javascript/tds-imac2-js/test",
      "sourcesContent": [
        "import {\n  every,\n  createTag,\n  img,\n  figure,\n  figcaption,\n  p,\n  generateMarkupForDog,\n  generateMarkupForAllDogs\n} from '../src/td02/td02'\n\nimport state from '../src/td02/state'\n\nimport chai from 'chai'\nchai.expect()\nconst expect = chai.expect\n\nconst test = it\n\ntest('exercice 1', () => {\n  expect(every(x => x > 0 && x < 5, [1, 2, 3, 4])).to.eq(true)\n})\n\ntest('createTag', () => {\n  expect(createTag).to.be.a('function')\n  expect(\n    createTag('div', {class: 'header'}, [])\n  ).to.deep.eq({\n    name: 'div',\n    attributes: {class: 'header'},\n    children: []\n  })\n})\n\ntest('exercice 2.1 : img', () => {\n  expect(img).to.be.a('function')\n  expect(img({src: 'http://example.com/img.jpg'})).to.deep.eq({\n    name: 'img',\n    attributes: {src: 'http://example.com/img.jpg'},\n    children: []\n  })\n})\ntest('exercice 2.1 : figure', () => {\n  expect(figure).to.be.a('function')\n  expect(figure(null, [])).to.deep.eq({\n    name: 'figure',\n    attributes: null,\n    children: []\n  })\n})\n\ntest('exercice 2.1 : figcaption', () => {\n  expect(figcaption).to.be.a('function')\n  expect(figcaption(null, [])).to.deep.eq({\n    name: 'figcaption',\n    attributes: null,\n    children: []\n  })\n})\n\ntest('exercice 2.1 : p', () => {\n  expect(p).to.be.a('function')\n  expect(p(null, ['value'])).to.deep.eq({\n    name: 'p',\n    attributes: null,\n    children: ['value']\n  })\n})\n\ntest('exercice 2.2', () => {\n  const dogMarkup = generateMarkupForDog('url', 'doggo', 'pretty puppy')\n  expect(dogMarkup.name).to.eq('figure')\n  expect(dogMarkup.children[0].name).to.eq('img')\n  expect(dogMarkup.children[0].attributes.src).to.eq('url')\n  expect(dogMarkup.children[1].name).to.eq('figcaption')\n  expect(dogMarkup.children[1].children[0].name).to.eq('p')\n  expect(dogMarkup.children[1].children[0].children).to.deep.eq(['doggo'])\n  expect(dogMarkup.children[1].children[1].name).to.eq('p')\n  expect(dogMarkup.children[1].children[1].children).to.deep.eq(['pretty puppy'])\n})\n\ntest('exercice 2.3', () => {\n  const dogsMarkup = generateMarkupForAllDogs(state.dogs)\n  expect(dogsMarkup.name).to.eq('div')\n})\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551694643165
  },
  "{\"sourceRoot\":\"/Users/djaydnova/Documents/IMAC - folder/IMAC-javascript/tds-imac2-js/src/td02\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/djaydnova/Documents/IMAC - folder/IMAC-javascript/tds-imac2-js\",\"filename\":\"/Users/djaydnova/Documents/IMAC - folder/IMAC-javascript/tds-imac2-js/src/td02/td02.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/djaydnova/Documents/IMAC - folder/IMAC-javascript/tds-imac2-js\",\"plugins\":[{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/djaydnova/Documents/IMAC - folder/IMAC-javascript/tds-imac2-js/src/td02",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/djaydnova/Documents/IMAC - folder/IMAC-javascript/tds-imac2-js",
      "filename": "/Users/djaydnova/Documents/IMAC - folder/IMAC-javascript/tds-imac2-js/src/td02/td02.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/djaydnova/Documents/IMAC - folder/IMAC-javascript/tds-imac2-js",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/djaydnova/Documents/IMAC - folder/IMAC-javascript/tds-imac2-js/src/td02/td02.js",
        "plugins": [
          "objectRestSpread",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/djaydnova/Documents/IMAC - folder/IMAC-javascript/tds-imac2-js/src/td02/td02.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/djaydnova/Documents/IMAC - folder/IMAC-javascript/tds-imac2-js/src/td02",
        "sourceFileName": "td02.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n/**\n * Exercice 1\n * Ecrivez la fonction `every`, qui pour un prédicat et un tableau donné, vérifie\n * que tous les éléments du tableau vérifie ce prédicat. Elle renvoie true si c'est le cas,\n * false sinon. On utilisera une fonction vue dans le TD précédent\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.conditionnallyDisplayDogs = exports.errorMessage = exports.generateMarkupForAllDogs = exports.generateMarkupForDog = exports.p = exports.img = exports.figcaption = exports.figure = exports.createTag = exports.every = void 0;\n\nvar every = function every() {}; // TODO\n\n/**\n * Exercice 2\n *\n * On va construire une suite de fonctions qui, une fois composées, vont nous servir à atteindre un but bien précis.\n * On va essayer d'ancrer cet exercice dans un exemple concret, qui vous amènera vers une idée de l'utilisation de\n * frameworks front-end.\n *\n * Nous allons construire, à partir de l'état global de notre application, une série de balises HTML <figure>,\n * contenant une image (<img>) et une légende (<figcaption>).\n *\n * Imaginons une interface minimaliste utilisable pour décrire une balise (tag) dans notre pseudo-DOM.\n *\n * {\n *   name: 'div',\n *   children: [ tag1, 'texte', tag2 ], // optionnel\n *   attributes: {src: 'http://example.com/image.jpg'} // optionnel\n * }\n *\n * Créons une première fonction utilitaire pour créer un tag, comme au TD précédent.\n */\n\n\nexports.every = every;\n\nvar createTag = function createTag(name, attributes, children) {\n  return {\n    name: name,\n    attributes: attributes,\n    children: children\n  };\n};\n/**\n * Précision de syntaxe !\n * On a écrit :\n * (name, attributes, children) => ({\n *   name: name,\n *   attributes: attributes\n *   children: children,\n * })\n *\n * Un raccourci syntaxique pour éviter la redondance est d'écrire les noms des variables\n * dans l'objet et ces noms deviendront les clés associées à leurs valeurs :\n * (name, attributes, children) => ({\n *   name,\n *   attributes\n *   children,\n * })\n */\n\n/** Exercice 2.1\n * Ecris des fonctions plus spécifiques, pour construire des balises <figure>, <figcaption>, <img> et <p>.\n * On passera `null` à `attributes` si on décide de ne pas en mettre. De même, pour `children`, on mettra un tableau vide.\n */\n\n\nexports.createTag = createTag;\n\nvar figure = function figure() {}; // TODO\n\n\nexports.figure = figure;\n\nvar figcaption = function figcaption() {}; // TODO\n\n\nexports.figcaption = figcaption;\n\nvar img = function img() {}; // TODO\n\n\nexports.img = img;\n\nvar p = function p() {}; // TODO\n\n/**\n * Exercice 2.2\n * Dans le fichier './state.js', on retrouvera l'état de l'application à un instant donné.\n * Il contient une liste de chiens et l'info sur l'utilisateur connecté,\n * qui pourraient être par exemple la réponse à l'appel à une API.\n *\n * Ecrivons une fonction encore plus spécifique pour générer la structure HTML qui affichera ces chiens.\n * La structure HTML attendue est :\n * <figure>\n *   <img src={url_vers_la_photo} />\n *   <figcaption>\n *     <p>{nom_du_chien}</p>\n *     <p>{description_du_chien}</p>\n *   </figcaption>\n * </figure>\n */\n\n\nexports.p = p;\n\nvar generateMarkupForDog = function generateMarkupForDog(url, nom, description) {}; // TODO\n\n/** Exercice 2.3\n * Ecrivons maintenant la fonction qui, pour une liste de chiens (voir celle de `./state.js`),\n * renvoie une liste de `figure` comme formatté précédemment. Etant donné la structure d'arbre de\n * notre markup, le noeud \"racine\" que vous devrez créer sera une div\n */\n\n\nexports.generateMarkupForDog = generateMarkupForDog;\n\nvar generateMarkupForAllDogs = function generateMarkupForAllDogs(dogs) {}; // TODO\n\n/** Exercice 2.4\n * Maintenant qu'on sait générer le markup, on veut l'afficher seulement si l'utilisateur aime les chiens,\n * sinon on affiche une div avec un message d'erreur.\n */\n\n\nexports.generateMarkupForAllDogs = generateMarkupForAllDogs;\nvar errorMessage = createTag();\nexports.errorMessage = errorMessage;\n\n// TODO\nvar conditionnallyDisplayDogs = function conditionnallyDisplayDogs(likesDogs, dogs) {}; // TODO\n\n\nexports.conditionnallyDisplayDogs = conditionnallyDisplayDogs;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRkMDIuanMiXSwibmFtZXMiOlsiZXZlcnkiLCJjcmVhdGVUYWciLCJuYW1lIiwiYXR0cmlidXRlcyIsImNoaWxkcmVuIiwiZmlndXJlIiwiZmlnY2FwdGlvbiIsImltZyIsInAiLCJnZW5lcmF0ZU1hcmt1cEZvckRvZyIsInVybCIsIm5vbSIsImRlc2NyaXB0aW9uIiwiZ2VuZXJhdGVNYXJrdXBGb3JBbGxEb2dzIiwiZG9ncyIsImVycm9yTWVzc2FnZSIsImNvbmRpdGlvbm5hbGx5RGlzcGxheURvZ3MiLCJsaWtlc0RvZ3MiXSwibWFwcGluZ3MiOiJBQUFBO0FBRUE7Ozs7Ozs7Ozs7OztBQU9PLElBQU1BLEtBQUssR0FBRyxTQUFSQSxLQUFRLEdBQU0sQ0FBRSxDQUF0QixDLENBQXVCOztBQUU5Qjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBcUJPLElBQU1DLFNBQVMsR0FBRyxTQUFaQSxTQUFZLENBQUNDLElBQUQsRUFBT0MsVUFBUCxFQUFtQkMsUUFBbkI7QUFBQSxTQUFpQztBQUN4REYsSUFBQUEsSUFBSSxFQUFFQSxJQURrRDtBQUV4REMsSUFBQUEsVUFBVSxFQUFFQSxVQUY0QztBQUd4REMsSUFBQUEsUUFBUSxFQUFFQTtBQUg4QyxHQUFqQztBQUFBLENBQWxCO0FBTVA7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWtCQTs7Ozs7Ozs7QUFLTyxJQUFNQyxNQUFNLEdBQUcsU0FBVEEsTUFBUyxHQUFNLENBQUUsQ0FBdkIsQyxDQUF3Qjs7Ozs7QUFDeEIsSUFBTUMsVUFBVSxHQUFHLFNBQWJBLFVBQWEsR0FBTSxDQUFFLENBQTNCLEMsQ0FBNEI7Ozs7O0FBQzVCLElBQU1DLEdBQUcsR0FBRyxTQUFOQSxHQUFNLEdBQU0sQ0FBRSxDQUFwQixDLENBQXFCOzs7OztBQUNyQixJQUFNQyxDQUFDLEdBQUcsU0FBSkEsQ0FBSSxHQUFNLENBQUUsQ0FBbEIsQyxDQUFtQjs7QUFFMUI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaUJPLElBQU1DLG9CQUFvQixHQUFHLFNBQXZCQSxvQkFBdUIsQ0FBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQVdDLFdBQVgsRUFBMkIsQ0FBRSxDQUExRCxDLENBQTJEOztBQUVsRTs7Ozs7Ozs7O0FBTU8sSUFBTUMsd0JBQXdCLEdBQUcsU0FBM0JBLHdCQUEyQixDQUFDQyxJQUFELEVBQVUsQ0FBRSxDQUE3QyxDLENBQThDOztBQUVyRDs7Ozs7OztBQUtPLElBQU1DLFlBQVksR0FBR2QsU0FBUyxFQUE5Qjs7O0FBQTBDO0FBQzFDLElBQU1lLHlCQUF5QixHQUFHLFNBQTVCQSx5QkFBNEIsQ0FBQ0MsU0FBRCxFQUFZSCxJQUFaLEVBQXFCLENBQUUsQ0FBekQsQyxDQUEwRCIsInNvdXJjZVJvb3QiOiIvVXNlcnMvZGpheWRub3ZhL0RvY3VtZW50cy9JTUFDIC0gZm9sZGVyL0lNQUMtamF2YXNjcmlwdC90ZHMtaW1hYzItanMvc3JjL3RkMDIiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxuLyoqXG4gKiBFeGVyY2ljZSAxXG4gKiBFY3JpdmV6IGxhIGZvbmN0aW9uIGBldmVyeWAsIHF1aSBwb3VyIHVuIHByw6lkaWNhdCBldCB1biB0YWJsZWF1IGRvbm7DqSwgdsOpcmlmaWVcbiAqIHF1ZSB0b3VzIGxlcyDDqWzDqW1lbnRzIGR1IHRhYmxlYXUgdsOpcmlmaWUgY2UgcHLDqWRpY2F0LiBFbGxlIHJlbnZvaWUgdHJ1ZSBzaSBjJ2VzdCBsZSBjYXMsXG4gKiBmYWxzZSBzaW5vbi4gT24gdXRpbGlzZXJhIHVuZSBmb25jdGlvbiB2dWUgZGFucyBsZSBURCBwcsOpY8OpZGVudFxuICovXG5cbmV4cG9ydCBjb25zdCBldmVyeSA9ICgpID0+IHt9IC8vIFRPRE9cblxuLyoqXG4gKiBFeGVyY2ljZSAyXG4gKlxuICogT24gdmEgY29uc3RydWlyZSB1bmUgc3VpdGUgZGUgZm9uY3Rpb25zIHF1aSwgdW5lIGZvaXMgY29tcG9zw6llcywgdm9udCBub3VzIHNlcnZpciDDoCBhdHRlaW5kcmUgdW4gYnV0IGJpZW4gcHLDqWNpcy5cbiAqIE9uIHZhIGVzc2F5ZXIgZCdhbmNyZXIgY2V0IGV4ZXJjaWNlIGRhbnMgdW4gZXhlbXBsZSBjb25jcmV0LCBxdWkgdm91cyBhbcOobmVyYSB2ZXJzIHVuZSBpZMOpZSBkZSBsJ3V0aWxpc2F0aW9uIGRlXG4gKiBmcmFtZXdvcmtzIGZyb250LWVuZC5cbiAqXG4gKiBOb3VzIGFsbG9ucyBjb25zdHJ1aXJlLCDDoCBwYXJ0aXIgZGUgbCfDqXRhdCBnbG9iYWwgZGUgbm90cmUgYXBwbGljYXRpb24sIHVuZSBzw6lyaWUgZGUgYmFsaXNlcyBIVE1MIDxmaWd1cmU+LFxuICogY29udGVuYW50IHVuZSBpbWFnZSAoPGltZz4pIGV0IHVuZSBsw6lnZW5kZSAoPGZpZ2NhcHRpb24+KS5cbiAqXG4gKiBJbWFnaW5vbnMgdW5lIGludGVyZmFjZSBtaW5pbWFsaXN0ZSB1dGlsaXNhYmxlIHBvdXIgZMOpY3JpcmUgdW5lIGJhbGlzZSAodGFnKSBkYW5zIG5vdHJlIHBzZXVkby1ET00uXG4gKlxuICoge1xuICogICBuYW1lOiAnZGl2JyxcbiAqICAgY2hpbGRyZW46IFsgdGFnMSwgJ3RleHRlJywgdGFnMiBdLCAvLyBvcHRpb25uZWxcbiAqICAgYXR0cmlidXRlczoge3NyYzogJ2h0dHA6Ly9leGFtcGxlLmNvbS9pbWFnZS5qcGcnfSAvLyBvcHRpb25uZWxcbiAqIH1cbiAqXG4gKiBDcsOpb25zIHVuZSBwcmVtacOocmUgZm9uY3Rpb24gdXRpbGl0YWlyZSBwb3VyIGNyw6llciB1biB0YWcsIGNvbW1lIGF1IFREIHByw6ljw6lkZW50LlxuICovXG5cbmV4cG9ydCBjb25zdCBjcmVhdGVUYWcgPSAobmFtZSwgYXR0cmlidXRlcywgY2hpbGRyZW4pID0+ICh7XG4gIG5hbWU6IG5hbWUsXG4gIGF0dHJpYnV0ZXM6IGF0dHJpYnV0ZXMsXG4gIGNoaWxkcmVuOiBjaGlsZHJlblxufSlcblxuLyoqXG4gKiBQcsOpY2lzaW9uIGRlIHN5bnRheGUgIVxuICogT24gYSDDqWNyaXQgOlxuICogKG5hbWUsIGF0dHJpYnV0ZXMsIGNoaWxkcmVuKSA9PiAoe1xuICogICBuYW1lOiBuYW1lLFxuICogICBhdHRyaWJ1dGVzOiBhdHRyaWJ1dGVzXG4gKiAgIGNoaWxkcmVuOiBjaGlsZHJlbixcbiAqIH0pXG4gKlxuICogVW4gcmFjY291cmNpIHN5bnRheGlxdWUgcG91ciDDqXZpdGVyIGxhIHJlZG9uZGFuY2UgZXN0IGQnw6ljcmlyZSBsZXMgbm9tcyBkZXMgdmFyaWFibGVzXG4gKiBkYW5zIGwnb2JqZXQgZXQgY2VzIG5vbXMgZGV2aWVuZHJvbnQgbGVzIGNsw6lzIGFzc29jacOpZXMgw6AgbGV1cnMgdmFsZXVycyA6XG4gKiAobmFtZSwgYXR0cmlidXRlcywgY2hpbGRyZW4pID0+ICh7XG4gKiAgIG5hbWUsXG4gKiAgIGF0dHJpYnV0ZXNcbiAqICAgY2hpbGRyZW4sXG4gKiB9KVxuICovXG5cbi8qKiBFeGVyY2ljZSAyLjFcbiAqIEVjcmlzIGRlcyBmb25jdGlvbnMgcGx1cyBzcMOpY2lmaXF1ZXMsIHBvdXIgY29uc3RydWlyZSBkZXMgYmFsaXNlcyA8ZmlndXJlPiwgPGZpZ2NhcHRpb24+LCA8aW1nPiBldCA8cD4uXG4gKiBPbiBwYXNzZXJhIGBudWxsYCDDoCBgYXR0cmlidXRlc2Agc2kgb24gZMOpY2lkZSBkZSBuZSBwYXMgZW4gbWV0dHJlLiBEZSBtw6ptZSwgcG91ciBgY2hpbGRyZW5gLCBvbiBtZXR0cmEgdW4gdGFibGVhdSB2aWRlLlxuICovXG5cbmV4cG9ydCBjb25zdCBmaWd1cmUgPSAoKSA9PiB7fSAvLyBUT0RPXG5leHBvcnQgY29uc3QgZmlnY2FwdGlvbiA9ICgpID0+IHt9IC8vIFRPRE9cbmV4cG9ydCBjb25zdCBpbWcgPSAoKSA9PiB7fSAvLyBUT0RPXG5leHBvcnQgY29uc3QgcCA9ICgpID0+IHt9IC8vIFRPRE9cblxuLyoqXG4gKiBFeGVyY2ljZSAyLjJcbiAqIERhbnMgbGUgZmljaGllciAnLi9zdGF0ZS5qcycsIG9uIHJldHJvdXZlcmEgbCfDqXRhdCBkZSBsJ2FwcGxpY2F0aW9uIMOgIHVuIGluc3RhbnQgZG9ubsOpLlxuICogSWwgY29udGllbnQgdW5lIGxpc3RlIGRlIGNoaWVucyBldCBsJ2luZm8gc3VyIGwndXRpbGlzYXRldXIgY29ubmVjdMOpLFxuICogcXVpIHBvdXJyYWllbnQgw6p0cmUgcGFyIGV4ZW1wbGUgbGEgcsOpcG9uc2Ugw6AgbCdhcHBlbCDDoCB1bmUgQVBJLlxuICpcbiAqIEVjcml2b25zIHVuZSBmb25jdGlvbiBlbmNvcmUgcGx1cyBzcMOpY2lmaXF1ZSBwb3VyIGfDqW7DqXJlciBsYSBzdHJ1Y3R1cmUgSFRNTCBxdWkgYWZmaWNoZXJhIGNlcyBjaGllbnMuXG4gKiBMYSBzdHJ1Y3R1cmUgSFRNTCBhdHRlbmR1ZSBlc3QgOlxuICogPGZpZ3VyZT5cbiAqICAgPGltZyBzcmM9e3VybF92ZXJzX2xhX3Bob3RvfSAvPlxuICogICA8ZmlnY2FwdGlvbj5cbiAqICAgICA8cD57bm9tX2R1X2NoaWVufTwvcD5cbiAqICAgICA8cD57ZGVzY3JpcHRpb25fZHVfY2hpZW59PC9wPlxuICogICA8L2ZpZ2NhcHRpb24+XG4gKiA8L2ZpZ3VyZT5cbiAqL1xuXG5leHBvcnQgY29uc3QgZ2VuZXJhdGVNYXJrdXBGb3JEb2cgPSAodXJsLCBub20sIGRlc2NyaXB0aW9uKSA9PiB7fSAvLyBUT0RPXG5cbi8qKiBFeGVyY2ljZSAyLjNcbiAqIEVjcml2b25zIG1haW50ZW5hbnQgbGEgZm9uY3Rpb24gcXVpLCBwb3VyIHVuZSBsaXN0ZSBkZSBjaGllbnMgKHZvaXIgY2VsbGUgZGUgYC4vc3RhdGUuanNgKSxcbiAqIHJlbnZvaWUgdW5lIGxpc3RlIGRlIGBmaWd1cmVgIGNvbW1lIGZvcm1hdHTDqSBwcsOpY8OpZGVtbWVudC4gRXRhbnQgZG9ubsOpIGxhIHN0cnVjdHVyZSBkJ2FyYnJlIGRlXG4gKiBub3RyZSBtYXJrdXAsIGxlIG5vZXVkIFwicmFjaW5lXCIgcXVlIHZvdXMgZGV2cmV6IGNyw6llciBzZXJhIHVuZSBkaXZcbiAqL1xuXG5leHBvcnQgY29uc3QgZ2VuZXJhdGVNYXJrdXBGb3JBbGxEb2dzID0gKGRvZ3MpID0+IHt9IC8vIFRPRE9cblxuLyoqIEV4ZXJjaWNlIDIuNFxuICogTWFpbnRlbmFudCBxdSdvbiBzYWl0IGfDqW7DqXJlciBsZSBtYXJrdXAsIG9uIHZldXQgbCdhZmZpY2hlciBzZXVsZW1lbnQgc2kgbCd1dGlsaXNhdGV1ciBhaW1lIGxlcyBjaGllbnMsXG4gKiBzaW5vbiBvbiBhZmZpY2hlIHVuZSBkaXYgYXZlYyB1biBtZXNzYWdlIGQnZXJyZXVyLlxuICovXG5cbmV4cG9ydCBjb25zdCBlcnJvck1lc3NhZ2UgPSBjcmVhdGVUYWcoLyogLi4uICovKSAvLyBUT0RPXG5leHBvcnQgY29uc3QgY29uZGl0aW9ubmFsbHlEaXNwbGF5RG9ncyA9IChsaWtlc0RvZ3MsIGRvZ3MpID0+IHt9IC8vIFRPRE9cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "td02.js"
      ],
      "names": [
        "every",
        "createTag",
        "name",
        "attributes",
        "children",
        "figure",
        "figcaption",
        "img",
        "p",
        "generateMarkupForDog",
        "url",
        "nom",
        "description",
        "generateMarkupForAllDogs",
        "dogs",
        "errorMessage",
        "conditionnallyDisplayDogs",
        "likesDogs"
      ],
      "mappings": "AAAA;AAEA;;;;;;;;;;;;AAOO,IAAMA,KAAK,GAAG,SAARA,KAAQ,GAAM,CAAE,CAAtB,C,CAAuB;;AAE9B;;;;;;;;;;;;;;;;;;;;;;;;AAqBO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,IAAD,EAAOC,UAAP,EAAmBC,QAAnB;AAAA,SAAiC;AACxDF,IAAAA,IAAI,EAAEA,IADkD;AAExDC,IAAAA,UAAU,EAAEA,UAF4C;AAGxDC,IAAAA,QAAQ,EAAEA;AAH8C,GAAjC;AAAA,CAAlB;AAMP;;;;;;;;;;;;;;;;;;AAkBA;;;;;;;;AAKO,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM,CAAE,CAAvB,C,CAAwB;;;;;AACxB,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM,CAAE,CAA3B,C,CAA4B;;;;;AAC5B,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM,CAAE,CAApB,C,CAAqB;;;;;AACrB,IAAMC,CAAC,GAAG,SAAJA,CAAI,GAAM,CAAE,CAAlB,C,CAAmB;;AAE1B;;;;;;;;;;;;;;;;;;;;AAiBO,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,GAAD,EAAMC,GAAN,EAAWC,WAAX,EAA2B,CAAE,CAA1D,C,CAA2D;;AAElE;;;;;;;;;AAMO,IAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,CAACC,IAAD,EAAU,CAAE,CAA7C,C,CAA8C;;AAErD;;;;;;;AAKO,IAAMC,YAAY,GAAGd,SAAS,EAA9B;;;AAA0C;AAC1C,IAAMe,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACC,SAAD,EAAYH,IAAZ,EAAqB,CAAE,CAAzD,C,CAA0D",
      "sourceRoot": "/Users/djaydnova/Documents/IMAC - folder/IMAC-javascript/tds-imac2-js/src/td02",
      "sourcesContent": [
        "'use strict'\n\n/**\n * Exercice 1\n * Ecrivez la fonction `every`, qui pour un prédicat et un tableau donné, vérifie\n * que tous les éléments du tableau vérifie ce prédicat. Elle renvoie true si c'est le cas,\n * false sinon. On utilisera une fonction vue dans le TD précédent\n */\n\nexport const every = () => {} // TODO\n\n/**\n * Exercice 2\n *\n * On va construire une suite de fonctions qui, une fois composées, vont nous servir à atteindre un but bien précis.\n * On va essayer d'ancrer cet exercice dans un exemple concret, qui vous amènera vers une idée de l'utilisation de\n * frameworks front-end.\n *\n * Nous allons construire, à partir de l'état global de notre application, une série de balises HTML <figure>,\n * contenant une image (<img>) et une légende (<figcaption>).\n *\n * Imaginons une interface minimaliste utilisable pour décrire une balise (tag) dans notre pseudo-DOM.\n *\n * {\n *   name: 'div',\n *   children: [ tag1, 'texte', tag2 ], // optionnel\n *   attributes: {src: 'http://example.com/image.jpg'} // optionnel\n * }\n *\n * Créons une première fonction utilitaire pour créer un tag, comme au TD précédent.\n */\n\nexport const createTag = (name, attributes, children) => ({\n  name: name,\n  attributes: attributes,\n  children: children\n})\n\n/**\n * Précision de syntaxe !\n * On a écrit :\n * (name, attributes, children) => ({\n *   name: name,\n *   attributes: attributes\n *   children: children,\n * })\n *\n * Un raccourci syntaxique pour éviter la redondance est d'écrire les noms des variables\n * dans l'objet et ces noms deviendront les clés associées à leurs valeurs :\n * (name, attributes, children) => ({\n *   name,\n *   attributes\n *   children,\n * })\n */\n\n/** Exercice 2.1\n * Ecris des fonctions plus spécifiques, pour construire des balises <figure>, <figcaption>, <img> et <p>.\n * On passera `null` à `attributes` si on décide de ne pas en mettre. De même, pour `children`, on mettra un tableau vide.\n */\n\nexport const figure = () => {} // TODO\nexport const figcaption = () => {} // TODO\nexport const img = () => {} // TODO\nexport const p = () => {} // TODO\n\n/**\n * Exercice 2.2\n * Dans le fichier './state.js', on retrouvera l'état de l'application à un instant donné.\n * Il contient une liste de chiens et l'info sur l'utilisateur connecté,\n * qui pourraient être par exemple la réponse à l'appel à une API.\n *\n * Ecrivons une fonction encore plus spécifique pour générer la structure HTML qui affichera ces chiens.\n * La structure HTML attendue est :\n * <figure>\n *   <img src={url_vers_la_photo} />\n *   <figcaption>\n *     <p>{nom_du_chien}</p>\n *     <p>{description_du_chien}</p>\n *   </figcaption>\n * </figure>\n */\n\nexport const generateMarkupForDog = (url, nom, description) => {} // TODO\n\n/** Exercice 2.3\n * Ecrivons maintenant la fonction qui, pour une liste de chiens (voir celle de `./state.js`),\n * renvoie une liste de `figure` comme formatté précédemment. Etant donné la structure d'arbre de\n * notre markup, le noeud \"racine\" que vous devrez créer sera une div\n */\n\nexport const generateMarkupForAllDogs = (dogs) => {} // TODO\n\n/** Exercice 2.4\n * Maintenant qu'on sait générer le markup, on veut l'afficher seulement si l'utilisateur aime les chiens,\n * sinon on affiche une div avec un message d'erreur.\n */\n\nexport const errorMessage = createTag(/* ... */) // TODO\nexport const conditionnallyDisplayDogs = (likesDogs, dogs) => {} // TODO\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551694643164
  },
  "{\"sourceRoot\":\"/Users/djaydnova/Documents/IMAC - folder/IMAC-javascript/tds-imac2-js/src/td02\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/djaydnova/Documents/IMAC - folder/IMAC-javascript/tds-imac2-js\",\"filename\":\"/Users/djaydnova/Documents/IMAC - folder/IMAC-javascript/tds-imac2-js/src/td02/state.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/djaydnova/Documents/IMAC - folder/IMAC-javascript/tds-imac2-js\",\"plugins\":[{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/djaydnova/Documents/IMAC - folder/IMAC-javascript/tds-imac2-js/src/td02",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/djaydnova/Documents/IMAC - folder/IMAC-javascript/tds-imac2-js",
      "filename": "/Users/djaydnova/Documents/IMAC - folder/IMAC-javascript/tds-imac2-js/src/td02/state.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/djaydnova/Documents/IMAC - folder/IMAC-javascript/tds-imac2-js",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/djaydnova/Documents/IMAC - folder/IMAC-javascript/tds-imac2-js/src/td02/state.js",
        "plugins": [
          "objectRestSpread",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/djaydnova/Documents/IMAC - folder/IMAC-javascript/tds-imac2-js/src/td02/state.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/djaydnova/Documents/IMAC - folder/IMAC-javascript/tds-imac2-js/src/td02",
        "sourceFileName": "state.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar createDog = function createDog(name, description, age, height) {\n  return {\n    name: name,\n    description: description,\n    age: age,\n    height: height\n  };\n};\n\nvar _default = {\n  user: {\n    name: 'jeanne',\n    email: 'jeanne.dupont@gmail.com',\n    likesDogs: true\n  },\n  dogs: [createDog('robert', 'great dane', 6, 30), createDog('alice', 'funny jack russell', 3, 40), createDog('aliénor', 'big but nice dog', 12, 90), createDog('maurice', 'in love with rabbits', 2, 30), createDog('michel', 'actually a robot', 8, 60), createDog('jean-mi', 'michels lover', 10, 90), createDog('huguette', 'crazy doggo', 11, 120), createDog('noémie', 'very sweet with children', 7, 50), createDog('huberte', 'eats bugs', 8, 50), createDog('momo', 'likes running in the woods', 1, 40)]\n};\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0YXRlLmpzIl0sIm5hbWVzIjpbImNyZWF0ZURvZyIsIm5hbWUiLCJkZXNjcmlwdGlvbiIsImFnZSIsImhlaWdodCIsInVzZXIiLCJlbWFpbCIsImxpa2VzRG9ncyIsImRvZ3MiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxJQUFNQSxTQUFTLEdBQUcsU0FBWkEsU0FBWSxDQUFDQyxJQUFELEVBQU9DLFdBQVAsRUFBb0JDLEdBQXBCLEVBQXlCQyxNQUF6QjtBQUFBLFNBQXFDO0FBQ3JESCxJQUFBQSxJQUFJLEVBQUpBLElBRHFEO0FBQy9DQyxJQUFBQSxXQUFXLEVBQVhBLFdBRCtDO0FBQ2xDQyxJQUFBQSxHQUFHLEVBQUhBLEdBRGtDO0FBQzdCQyxJQUFBQSxNQUFNLEVBQU5BO0FBRDZCLEdBQXJDO0FBQUEsQ0FBbEI7O2VBSWU7QUFDYkMsRUFBQUEsSUFBSSxFQUFFO0FBQ0pKLElBQUFBLElBQUksRUFBRSxRQURGO0FBRUpLLElBQUFBLEtBQUssRUFBRSx5QkFGSDtBQUdKQyxJQUFBQSxTQUFTLEVBQUU7QUFIUCxHQURPO0FBTWJDLEVBQUFBLElBQUksRUFBRSxDQUNKUixTQUFTLENBQUMsUUFBRCxFQUFXLFlBQVgsRUFBeUIsQ0FBekIsRUFBNEIsRUFBNUIsQ0FETCxFQUVKQSxTQUFTLENBQUMsT0FBRCxFQUFVLG9CQUFWLEVBQWdDLENBQWhDLEVBQW1DLEVBQW5DLENBRkwsRUFHSkEsU0FBUyxDQUFDLFNBQUQsRUFBWSxrQkFBWixFQUFnQyxFQUFoQyxFQUFvQyxFQUFwQyxDQUhMLEVBSUpBLFNBQVMsQ0FBQyxTQUFELEVBQVksc0JBQVosRUFBb0MsQ0FBcEMsRUFBdUMsRUFBdkMsQ0FKTCxFQUtKQSxTQUFTLENBQUMsUUFBRCxFQUFXLGtCQUFYLEVBQStCLENBQS9CLEVBQWtDLEVBQWxDLENBTEwsRUFNSkEsU0FBUyxDQUFDLFNBQUQsRUFBWSxlQUFaLEVBQTZCLEVBQTdCLEVBQWlDLEVBQWpDLENBTkwsRUFPSkEsU0FBUyxDQUFDLFVBQUQsRUFBYSxhQUFiLEVBQTRCLEVBQTVCLEVBQWdDLEdBQWhDLENBUEwsRUFRSkEsU0FBUyxDQUFDLFFBQUQsRUFBVywwQkFBWCxFQUF1QyxDQUF2QyxFQUEwQyxFQUExQyxDQVJMLEVBU0pBLFNBQVMsQ0FBQyxTQUFELEVBQVksV0FBWixFQUF5QixDQUF6QixFQUE0QixFQUE1QixDQVRMLEVBVUpBLFNBQVMsQ0FBQyxNQUFELEVBQVMsNEJBQVQsRUFBdUMsQ0FBdkMsRUFBMEMsRUFBMUMsQ0FWTDtBQU5PLEMiLCJzb3VyY2VSb290IjoiL1VzZXJzL2RqYXlkbm92YS9Eb2N1bWVudHMvSU1BQyAtIGZvbGRlci9JTUFDLWphdmFzY3JpcHQvdGRzLWltYWMyLWpzL3NyYy90ZDAyIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgY3JlYXRlRG9nID0gKG5hbWUsIGRlc2NyaXB0aW9uLCBhZ2UsIGhlaWdodCkgPT4gKHtcbiAgbmFtZSwgZGVzY3JpcHRpb24sIGFnZSwgaGVpZ2h0XG59KVxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIHVzZXI6IHtcbiAgICBuYW1lOiAnamVhbm5lJyxcbiAgICBlbWFpbDogJ2plYW5uZS5kdXBvbnRAZ21haWwuY29tJyxcbiAgICBsaWtlc0RvZ3M6IHRydWVcbiAgfSxcbiAgZG9nczogW1xuICAgIGNyZWF0ZURvZygncm9iZXJ0JywgJ2dyZWF0IGRhbmUnLCA2LCAzMCksXG4gICAgY3JlYXRlRG9nKCdhbGljZScsICdmdW5ueSBqYWNrIHJ1c3NlbGwnLCAzLCA0MCksXG4gICAgY3JlYXRlRG9nKCdhbGnDqW5vcicsICdiaWcgYnV0IG5pY2UgZG9nJywgMTIsIDkwKSxcbiAgICBjcmVhdGVEb2coJ21hdXJpY2UnLCAnaW4gbG92ZSB3aXRoIHJhYmJpdHMnLCAyLCAzMCksXG4gICAgY3JlYXRlRG9nKCdtaWNoZWwnLCAnYWN0dWFsbHkgYSByb2JvdCcsIDgsIDYwKSxcbiAgICBjcmVhdGVEb2coJ2plYW4tbWknLCAnbWljaGVscyBsb3ZlcicsIDEwLCA5MCksXG4gICAgY3JlYXRlRG9nKCdodWd1ZXR0ZScsICdjcmF6eSBkb2dnbycsIDExLCAxMjApLFxuICAgIGNyZWF0ZURvZygnbm/DqW1pZScsICd2ZXJ5IHN3ZWV0IHdpdGggY2hpbGRyZW4nLCA3LCA1MCksXG4gICAgY3JlYXRlRG9nKCdodWJlcnRlJywgJ2VhdHMgYnVncycsIDgsIDUwKSxcbiAgICBjcmVhdGVEb2coJ21vbW8nLCAnbGlrZXMgcnVubmluZyBpbiB0aGUgd29vZHMnLCAxLCA0MClcbiAgXVxufVxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "state.js"
      ],
      "names": [
        "createDog",
        "name",
        "description",
        "age",
        "height",
        "user",
        "email",
        "likesDogs",
        "dogs"
      ],
      "mappings": ";;;;;;;AAAA,IAAMA,SAAS,GAAG,SAAZA,SAAY,CAACC,IAAD,EAAOC,WAAP,EAAoBC,GAApB,EAAyBC,MAAzB;AAAA,SAAqC;AACrDH,IAAAA,IAAI,EAAJA,IADqD;AAC/CC,IAAAA,WAAW,EAAXA,WAD+C;AAClCC,IAAAA,GAAG,EAAHA,GADkC;AAC7BC,IAAAA,MAAM,EAANA;AAD6B,GAArC;AAAA,CAAlB;;eAIe;AACbC,EAAAA,IAAI,EAAE;AACJJ,IAAAA,IAAI,EAAE,QADF;AAEJK,IAAAA,KAAK,EAAE,yBAFH;AAGJC,IAAAA,SAAS,EAAE;AAHP,GADO;AAMbC,EAAAA,IAAI,EAAE,CACJR,SAAS,CAAC,QAAD,EAAW,YAAX,EAAyB,CAAzB,EAA4B,EAA5B,CADL,EAEJA,SAAS,CAAC,OAAD,EAAU,oBAAV,EAAgC,CAAhC,EAAmC,EAAnC,CAFL,EAGJA,SAAS,CAAC,SAAD,EAAY,kBAAZ,EAAgC,EAAhC,EAAoC,EAApC,CAHL,EAIJA,SAAS,CAAC,SAAD,EAAY,sBAAZ,EAAoC,CAApC,EAAuC,EAAvC,CAJL,EAKJA,SAAS,CAAC,QAAD,EAAW,kBAAX,EAA+B,CAA/B,EAAkC,EAAlC,CALL,EAMJA,SAAS,CAAC,SAAD,EAAY,eAAZ,EAA6B,EAA7B,EAAiC,EAAjC,CANL,EAOJA,SAAS,CAAC,UAAD,EAAa,aAAb,EAA4B,EAA5B,EAAgC,GAAhC,CAPL,EAQJA,SAAS,CAAC,QAAD,EAAW,0BAAX,EAAuC,CAAvC,EAA0C,EAA1C,CARL,EASJA,SAAS,CAAC,SAAD,EAAY,WAAZ,EAAyB,CAAzB,EAA4B,EAA5B,CATL,EAUJA,SAAS,CAAC,MAAD,EAAS,4BAAT,EAAuC,CAAvC,EAA0C,EAA1C,CAVL;AANO,C",
      "sourceRoot": "/Users/djaydnova/Documents/IMAC - folder/IMAC-javascript/tds-imac2-js/src/td02",
      "sourcesContent": [
        "const createDog = (name, description, age, height) => ({\n  name, description, age, height\n})\n\nexport default {\n  user: {\n    name: 'jeanne',\n    email: 'jeanne.dupont@gmail.com',\n    likesDogs: true\n  },\n  dogs: [\n    createDog('robert', 'great dane', 6, 30),\n    createDog('alice', 'funny jack russell', 3, 40),\n    createDog('aliénor', 'big but nice dog', 12, 90),\n    createDog('maurice', 'in love with rabbits', 2, 30),\n    createDog('michel', 'actually a robot', 8, 60),\n    createDog('jean-mi', 'michels lover', 10, 90),\n    createDog('huguette', 'crazy doggo', 11, 120),\n    createDog('noémie', 'very sweet with children', 7, 50),\n    createDog('huberte', 'eats bugs', 8, 50),\n    createDog('momo', 'likes running in the woods', 1, 40)\n  ]\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551694643164
  }
}